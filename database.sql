use oboco;
create table bookCollections (id bigint not null auto_increment, directoryPath varchar(4096) not null, name varchar(255) not null, normalizedName varchar(255) not null, updateDate timestamp(3) not null default current_timestamp(3), parentBookCollectionId bigint, numberOfBookCollections integer not null, numberOfBooks integer not null, number integer not null, primary key (id));
create table bookMarkReferences (id bigint not null auto_increment, fileId varchar(64) not null, updateDate timestamp(3) not null default current_timestamp(3), userName varchar(255) not null, bookId bigint, bookMarkId bigint not null, primary key (id));
create table bookMarks (id bigint not null auto_increment, fileId varchar(64) not null, page integer not null, updateDate timestamp(3) not null default current_timestamp(3), userName varchar(255) not null, primary key (id));
create table books (id bigint not null auto_increment, fileId varchar(64) not null, filePath varchar(4096) not null, name varchar(255) not null, normalizedName varchar(255) not null, numberOfPages integer not null, updateDate timestamp(3) not null default current_timestamp(3), bookCollectionId bigint, number integer not null, primary key (id));
create table userRoles (userId bigint not null, role varchar(255) not NULL);
create table users (id bigint not null auto_increment, name varchar(255) not null, passwordHash varchar(60) not null, updateDate timestamp(3) not null default current_timestamp(3), primary key (id));
create index bookCollectionNormalizedName on bookCollections (normalizedName);
create index bookNormalizedName on books (normalizedName);
alter table bookCollections add constraint bookCollectionDirectoryPath unique (directoryPath);
create index bookMarkReferenceUserName on bookMarkReferences (userName);
create index bookMarkReferenceFileId on bookMarkReferences (fileId);
alter table bookMarkReferences add constraint bookMarkReferenceUserNameBookIdBookMarkId unique (userName, bookId, bookMarkId);
create index bookMarkUserName on bookMarks (userName);
create index bookMarkFileId on bookMarks (fileId);
create index bookFileId on books (fileId);
alter table books add constraint bookFilePath unique (filePath);
alter table users add constraint userName unique (NAME);
alter table bookCollections add constraint FKiufb3ykonq6jxly95he6muql0 foreign key (parentBookCollectionId) references bookCollections(id) on delete cascade;
alter table bookMarkReferences add constraint FKecm9391i4glkb7dddnsqvd5rb foreign key (bookId) references books(id);
alter table bookMarkReferences add constraint FKl2ijhkebftw3gdgmlkseo49kp foreign key (bookMarkId) references bookMarks(id);
alter table books add constraint FKe6gb0v6dtxns6rgtd8bv4ri0h foreign key (bookCollectionId) references bookCollections(id);
alter table userRoles add constraint FKgqpfwr3766gtqga2i0kgmlwlu foreign key (userId) references users(id);
insert into users (id, name, passwordHash, updateDate) values (1, 'administrator', '$2a$12$msu32WtSMaQVCJsIDKCxkOTVOGRrncBjUe5x63GbY/RizCJ/zyFPC', current_timestamp);
insert into userRoles (userId, role) values (1, 'ADMINISTRATOR');
insert into userRoles (userId, role) values (1, 'USER');
